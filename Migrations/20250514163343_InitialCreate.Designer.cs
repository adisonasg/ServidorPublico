// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServidorPublico.Infrastructure.Data;

#nullable disable

namespace ServidorPublico.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250514163343_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("ServidorPublico.Domain.Entities.Lotacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Lotacoes");
                });

            modelBuilder.Entity("ServidorPublico.Domain.Entities.Orgao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Orgaos");
                });

            modelBuilder.Entity("ServidorPublico.Domain.Entities.Servidor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("LotacaoId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OrgaoId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sala")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LotacaoId");

                    b.HasIndex("OrgaoId");

                    b.ToTable("Servidores", (string)null);
                });

            modelBuilder.Entity("ServidorPublico.Domain.Entities.Servidor", b =>
                {
                    b.HasOne("ServidorPublico.Domain.Entities.Lotacao", null)
                        .WithMany("Servidores")
                        .HasForeignKey("LotacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServidorPublico.Domain.Entities.Orgao", null)
                        .WithMany("Servidores")
                        .HasForeignKey("OrgaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ServidorPublico.Domain.Entities.Lotacao", b =>
                {
                    b.Navigation("Servidores");
                });

            modelBuilder.Entity("ServidorPublico.Domain.Entities.Orgao", b =>
                {
                    b.Navigation("Servidores");
                });
#pragma warning restore 612, 618
        }
    }
}
